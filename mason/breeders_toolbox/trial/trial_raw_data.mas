
<%args>
$trial_id
</%args>

<& /util/import_javascript.mas, classes => ['CXGN.BreedersToolbox.HTMLSelect'] &>

<style>

.form-group {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.form-group label {
  margin-right: 10px;
  white-space: nowrap;
}

.form-group input,
.form-group select {
  flex-grow: 1;
}

</style>

<h4 style= "text-align:center">Choose trait, observation level and data range to display</h4>
<br/>

<table>
<tr>
    <td>
		<div class="form-group">
			<label for="trait_selector_for_raw_data"> Trait:</label>
    	  <div id="trait_selector_for_raw_data">[Loading...]</div>
		</div>
    </td>
    <td width="30"></td>
    <td>
		<div class="form-group">
			<label for="raw_data_observation_level">Observation Level:</label>
			<select id="raw_data_observation_level">
				<option>Plots</option>
				<option>Plants</option>
				<option>Subplots</option>
				<option>Tissue_samples</option>
      		</select>
		</div>
    </td>
</tr>
<tr>
    <td>
		<div class="form-group">
			<label for="raw_data_start_date">Start Date:</label>
			<input type="text" id="raw_data_start_date" title="raw_data_start_date"/>
		</div>
	</td>
	<td width="30"></td>
    <td>
		<div class="form-group">
			<label for="raw_data_end_date"> End Date:</label>
			<input type="text" id="raw_data_end_date" title="raw_data_end_date"/>
		</div>
    </td>
</tr>
<tr>
    <td colspan="4", style="text-align: center;">
      <button id="raw_data_trait_select_button">submit</button>
    </td>
</tr>
</table>

<br />

<table id="raw_trait_data_table">
</table>

<script>

jQuery(window).ready( function() {
    
    jQuery('#trial_raw_data_onswitch').click( function() {
	
	create_trait_menu_for_trial(<% $trial_id %>)
	    .then( (result) => fetch_traits(result.result.searchResultsDbId))
	    .then( (result) => build_menu(result.result))
	    .then( (final) =>  {
	    });
    });
    
    
    jQuery('#raw_data_trait_select_button').click( function() {
		var trait_id = jQuery('#selectRawDataTrait').find(":selected").val();
		var observation_level = jQuery('#raw_data_observation_level').find(":selected").val();
		var start_date = jQuery('#raw_data_start_date').val();
		var end_date = jQuery('#raw_data_end_date').val();

		//console.log("check the selected trait ID:", trait_id);
    	//console.log("check observation level:", observation_level);
    	//console.log("see the start date:", start_date);
    	//console.log("see the end date:", end_date);

	//alert("now fetching trait_id "+trait_id+" observation_level "+observation_level+" start date = "+start_date+" end date: "+end_date);
        get_trait_data(<% $trial_id %>, trait_id, start_date, end_date, observation_level)
	    .then( (result) => fetch_raw_observation_data_table(result.result.searchResultsDbId))
	    .then( (result) => displayRawObservations(result.result) )
	    .then( (final) => {
	    });
    });    
    
    jQuery('input[title="raw_data_start_date"]').daterangepicker(
	{
	    "singleDatePicker": true,
	    "showDropdowns": true,
	    "autoUpdateInput": true,
	    "startDate": "1960-01-01",
	    "yearSelect" : true,
	    "minDate": "1960-01-01",
	    "maxDate": "2030-12-31",
	    locale: { 
			format: 'YYYY-MM-DD'
	    }
	},
	
    );
    
    jQuery('input[title="raw_data_end_date"]').daterangepicker(
	{
	    "singleDatePicker": true,
	    "autoUpdateInput": true,
	    "minDate": "1960-01-01",
	    "maxDate" : "2030-12-31",
	    "yearSelect" : true,
	    locale: {
			format: 'YYYY-MM-DD'
	    },
	    "showDropdowns": true,
	},
	
    );
    
    function create_trait_menu_for_trial(trial_id) {
        return jQuery.ajax( {
            'url': "/brapi/v2/search/variables",
	    	'data': { 'studyDbIds': [ trial_id ], 'pageSize': 10000 },
	    	'method' : 'POST',
		});
    }

    function fetch_traits(searchResultsDbId) {
		return jQuery.ajax( {
		    'url': "/brapi/v2/search/variables/"+searchResultsDbId,
		    'method': "GET",
		    'data': { pageSize: 10000 }
		});
    }  

    function build_menu(result) {

	var menu = '<select id="selectRawDataTrait">';
	for (var i=0; i<result.data.length; i++) {
	    menu += '<option value="'+result.data[i].observationVariableDbId+'">'+result.data[i].trait.traitName+'</option>';
	}
	menu += '</select>';   

	jQuery('#trait_selector_for_raw_data').html(menu);
    }
    
    function get_trait_data(trial_id, trait_id, start_date, end_date, observation_level) {
		return jQuery.ajax( {
    	   	url: "/brapi/v2/search/observations/",
		    data: { studyDbIds: [ trial_id ], observationVariableDbIds: [ trait_id ], observationTimeStampRangeStart: start_date, observationTimeStampRangeEnd: end_date, observationLevels: observation_level},
		    method: "POST"
		});
    }
    
    function fetch_raw_observation_data_table(searchResultsDbId) {
		return jQuery.ajax( {
       	    url: "/brapi/v2/search/observations/"+searchResultsDbId,
	    	data: { pageSize: 10000 },
	    	method: "GET"
		});     
    }
    
    
    function displayRawObservations(result) {
		var data = new Array();
		//alert(result);
		for (var i=0; i<result.data.length; i++) {
			var observationDate = new Date(result.data[i].observationTimeStamp);

			// the date is in YYYY-MM-DD format
			var formatDate = observationDate.getFullYear() + '-' +
				('0' + (observationDate.getMonth() + 1)).slice(-2)+ '-' +
				('0' + observationDate.getDate()).slice(-2);

		    data.push( [ result.data[i].observationDbId, result.data[i].observationUnitName, result.data[i].observationVariableName, result.data[i].value, formatDate, result.data[i].collector ] );
		}

		jQuery('#raw_trait_data_table').DataTable( {
		   'destroy': true,
		   'columns': [
		       { title: 'observation id'},
		       { title: 'observation unit' },
		       { title: 'observation variable' },
		       { title: 'value' },
		       { title: 'collect date'},
		       { title: 'collector' }
		   ],
		   'data' : data
		});	     
    }
});    

</script>
