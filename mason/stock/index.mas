<%doc>

=head1 NAME

/stock/index.mas - a page for displaying stock details (e.g. accession, population, etc.) 

=head1 DESCRIPTION

parameters:

=over 1

=item $stockref

a hashref with all the parameters needed for printing the stock page! 

 $stockref->{stock_id}
 $stockref->{stock}
 $stockref->{schema}
 $stockref->{uniquename}
 $stockref->{curator}  (boolean)
 $stockref->{submitter} (boolean)
 $stockref->{is_owner} (boolean)
 $stockref->{props} (hash of arrayrefs of stockprops. Keys = prop name, value = prop value)
 $stockref->{has_pedigree} (boolean)
 $stockref->{has_descendants} (boolean)
 locus_add_uri
 locus_autocomplete_uri => '/ajax/locus/autocomplete/'
 cvterm_add_uri
 cvterm_autocomplete_uri => '/ajax/cvterm/autocomplete/'
 barcode_tempdir
 barcode_tempuri 
 organism_autocomplete_uri => '/ajax/organism/autocomplete/'

=back

=head1 AUTHOR

Naama Menda <nm249@cornell.edu>

=cut

</%doc>

<%args>
$stock_row
$stockref => undef
$locus_add_uri => ''
$locus_autocomplete_uri => undef
$cvterm_add_uri => ''
$cvterm_autocomplete_uri => undef
$barcode_tempdir => undef
$barcode_tempuri => undef
$identifier_prefix => 'SGN'
$organism_autocomplete_uri => '/ajax/organism/autocomplete/'

</%args>


<%perl>

use Bio::Chado::Schema;
use CXGN::Chado::Stock;
use CXGN::Page::FormattingHelpers qw / html_optional_show info_table_html /;
use CXGN::People::Person;
use CXGN::Chado::Publication;
use CXGN::Cview::Map::SGN::Genotype;
use CXGN::Cview::MapOverviews;

my $stock = $stockref->{stock};
my $stock_id = $stockref->{stock_id};
my $action = $stockref->{action} || 'view';
my $person_id = $stockref->{person_id};
my $curator = $stockref->{curator};
my $submitter = $stockref->{submitter};
my $sequencer = $stockref->{sequencer};
my $pubs = $stockref->{pubs};
my $has_pedigree = $stockref->{has_pedigree};
my $has_descendants = $stockref->{has_descendants};
my $trait_ontology_db_name = $stockref->{trait_ontology_db_name};

my $schema = $stockref->{schema};
my $dbh = $stockref->{dbh};

my $stockprop_cv = $schema->resultset("Cv::Cv")->search( {
 'me.name' => 'stock_property'} );


my ($type_name, $uniquename);
my $type = $stock_row ? $stock_row->type : undef;
$type_name  = $type->name() if $type;
$uniquename = $stock->get_uniquename if $type;
#################
my $is_owner = $stockref->{is_owner};

my $this_page = "/stock/$stock_id/view";

my $add_image_link = qq|<a href="/image/add?type_id=$stock_id&action=new&type=stock&refering_page=$this_page">[Add new image]</a>|;
my $image_ids =  $stockref->{image_ids} || [] ;
my $stockprops = $stockref->{props};

my $metadata = ['variety', 'donor', 'donor institute', 'country', 'state' , 'adaptation' , 'notes'];

#my $pedigree= ['pedigree', 'male parent', 'female parent'];
# get pedigree of stock
#my $stock_pedigree = $stockref->{stock_pedigree};
#my $stock_descendants = $stockref->{stock_descendants};


my $experiment = ['year', 'location', 'replicate']; # these values should be in nd_experimentprop ?

my $resources = [ 'synonym', 'solcap number'];

my $allele_div = "stock_alleles";
my $new_locus_link = !$person_id ? qq|<a href="/solpeople/login.pl">[log-in to associate new locus]</a> | : '' ;

#owner
my $owners = $stockref->{owners};
my $editor_link;
foreach my $o_id (@$owners) {
  my $person = CXGN::People::Person->new($dbh, $o_id);
  my $first_name = $person->get_first_name;
  my $last_name = $person->get_last_name;
  $editor_link .= qq|<a href="/solpeople/personal-info.pl?sp_person_id=$o_id">$first_name $last_name</a> |;
}

#phenotypes measured directly on this stock
my $direct_phenotypes = $stockref->{direct_phenotypes} || undef;

# get all phenotypes of subjects
my $members_phenotypes = $stockref->{members_phenotypes};
my $p_download_link = qq|<a href = "/stock/$stock_id/phenotypes">[Download phenotypes]</a>| if ( (keys %$direct_phenotypes) || ( keys %$members_phenotypes) );
my $direct_genotypes = $stockref->{direct_genotypes};
my $g_download_link = qq|<a href =  "/stock/$stock_id/genotypes">Download genotypes</a>| if (keys %$direct_genotypes) ;
############################
my $map_html = $stockref->{map_html};
my $map;
if ($stock_id) {
  $map = CXGN::Cview::Map::SGN::Genotype->new($dbh, $stock_id);
  if ($map->get_chromosome_count > 1 ) {
    my $overview = CXGN::Cview::MapOverviews::Generic->new($map,
                                                           {
                                                            dbh=> $dbh,
                                                            basepath => $stockref->{cview_basepath},
                                                            tempfiles_subdir => $stockref->{cview_tmp_dir } });
    if ($overview) {
      $overview->render_map();
      $map_html .= $overview->get_image_html();
    }
  }
}
#########################################
my $has_qtl_data = $stockref->{has_qtl_data};


my $new_pub_link = $curator || $submitter || $sequencer  ?   qq|<a href="/chado/add_publication.pl?type=stock&amp;type_id=$stock_id&amp;refering_page=$this_page&amp;action=new"> [Associate publication] </a>| : qq|<span class=\"ghosted\">[Associate publication]</span>| ;

my $pub_count = scalar( keys %$pubs );

## EUSOL, tgrc (stock_dbxref)
my $dbxrefs = $stockref->{dbxrefs};
my %source_dbs;
foreach my $db_name ( keys %$dbxrefs ) {
  foreach my $dbxref ( @{ $dbxrefs->{$db_name} } ) {
    my $url = $dbxref->db->urlprefix . $dbxref->db->url;
    $url .= $dbxref->accession if $url =~ m/\?$|\=$/ ;
    $source_dbs{$url} = $db_name . ": " . $dbxref->accession if $url;
  }
}

my $ontology_subtitle = $curator || $submitter || $sequencer  ?
  qq|<a href="javascript:Tools.toggleContent('associate_cvterm_form', 'stock_ontology')">[Add ontology annotations]</a> | :
  qq |<span class = "ghosted"> [Add ontology annotations]</span> |;

my $add_phenotype_link =  $curator || $submitter || $sequencer  ? qq| <a href="javascript:Tools.toggleContent('add_phenotype_form', 'stock_phenotype')" >[Add phenotype]</a> | :   qq |<span class = "ghosted"> [Add phenotype]</span> |;

my $edit_privs = $curator || $submitter || $sequencer;
</%perl>
<& /util/import_javascript.mas, classes => ["jquery", "jqueryui", "thickbox", "CXGN.Phenome.Tools", "CXGN.Page.FormattingHelpers", "jquery.cookie"] &>


<script language="javascript">
function jqueryStuff() { 
   jQuery(function() {
     jQuery("#species_name").autocomplete({
        source: '/organism/autocomplete'
     });
  });
}
</script>
<& /page/page_title.mas, title=> join( ': ', grep $_, ucfirst($type_name), $uniquename ) || 'Create a new stock' &>


<&| /page/info_section.mas, title=>"Stock details" , subtitle => "<a href=/phenome/qtl_form.pl>New QTL population</a> | <a href=/search/stocks/>Back to stock search</a>"  &>

<table><tr><td width="400">
  <& /page/form.mas,
  object_type=>'stock',
  object_id=>"$stock_id",
  form_name=> 'stock_form',
  server_side_script => '/phenome/stock/stock_ajax_form.pl',
  form_div_name=>'stock_details',
  js_object_name=> 'stockForm',
  page_url => "/stock/$stock_id/view/" ,
  alternate_new_button => '<a href ="/stock/0/new">[New]</a>'
  &>
</td><td>

<& /util/barcode.mas, identifier => "$identifier_prefix"."$stock_id", text=> "$identifier_prefix stock $stock_id ($uniquename)", format=>"code128"  &><br /><br />
% #<& /util/barcode.mas, identifier => "http://solgenomics.net/stock/$stock_id/view", text=>"SGN stock $stock_id ($uniquename)", format=>"qrcode" &>


</td></tr></table>

<div><b>Stock editors: </b> <% $editor_link %></div>
<br />
% foreach my $db_url (keys %source_dbs) {
<div><a href=<% $db_url %>><% $source_dbs{$db_url} %></a> </div>
%}
<br />
% my $div_name = join("_", @$resources);
% my $subtitle = $edit_privs ? "[<a href=\"javascript:synonyms_addPropDialog()\">Add...</a>]" : "[Add]";
   <&| /page/info_section.mas, title => "Synonyms" , is_subsection => 1 , subtitle=>$subtitle &>
      <& /stock/stockprops.mas, stock_id=> $stock_id, props=> $stockprops , div_name=>'synonyms', subset=>$resources, editable=> [ 'synonym' ], edit_privs => $edit_privs   &>
</&>
%  $div_name = join("_", @$metadata);
    <&| /page/info_section.mas, title => "Additional information" , collapsible=> 1, is_subsection => 1 &>
      <& /stock/stockprops.mas, stock_id=>$stock_id, props=> $stockprops, subset=> $metadata  &>
</&>


</&>


<&| /page/info_section.mas, title => "Associated loci (" . $stockref->{allele_count} . ")" , subtitle => $new_locus_link, collapsible=> 1 , collapsed => 1 &>

<& /phenome/associate_locus.mas, object_id => $stock_id , object_name => "stock", locus_add_uri=> $locus_add_uri,   allele_div => $allele_div , show_form => $is_owner &>

</&>


<&| /page/info_section.mas, title => "Experimental data" , collapsible=> 1, is_subsection => 0 &>
      <& /stock/stockprops.mas, stock_id=>$stock_id, props=> $stockprops, subset=> $experiment  &>
</&>

% if($is_owner) {
<&| /page/info_section.mas, title=>"Stock history", collapsible=>1, collapsed=>1 &>

</&>


% }

% my $collapsible = 0; 
% if ($has_pedigree==1) {
%  $collapsible = 1;
% }
% my $add_parent_link = "Add parent";
% if ($person_id && $submitter) { $add_parent_link = qq | <a id="add_parent_link" >Add parent</a> |; }

<&| /page/info_section.mas, title=>"Pedigree" , collapsible=> $collapsible, collapsed=>0, subtitle=>"[$add_parent_link]" &>
  <& /pedigree/stock_pedigree.mas, stock_id => $stock_id, has_pedigree => $has_pedigree &>
</&>





% if ($has_descendants==1) {

<&| /page/info_section.mas, title=>"Descendants" , collapsible=>1, collapsed=>0 &>
  <& /pedigree/stock_descendants.mas, stock_id => $stock_id &>
</&>

% } else {

<&| /page/info_section.mas, title=>"Descendants" , collapsible=>1, collapsed=>1 &>
</&>

% }


% if ($type) {
<&| /page/info_section.mas, title=>"Related stocks" , collapsible=>1, collapsed=>0 &>
  <& /stock/related_stocks.mas, stock => $stock_row &>

</&>

% }


<&| /page/info_section.mas, title=>"Images (" .  scalar(@$image_ids)  . ")", subtitle => "$add_image_link", collapsible=>1, collapsed=>1 &>
  <& /image/print_images.mas , images=>$image_ids , dbh=>$dbh &>

</&>


<&| /page/info_section.mas, title=>"Literature annotation ($pub_count)" , subtitle=>$new_pub_link, id=>"publications" , collapsible=>1, collapsed=>1 &>

% my $pub_count = 0;
% foreach my $full_accession ( keys %$pubs  ) {
% my $pub = CXGN::Chado::Publication->new($dbh, $pubs->{$full_accession}->pub_id );
% my ($pub_db_name, $accession) = split ':' , $full_accession;
<& /chado/publication.mas, pub=>$pub, count=>$pub_count++, db=>$pub_db_name, accession=>$accession &>
  <br >
% }

</&>

<&| /page/info_section.mas,
  id   => 'stock_ontology',
  title=>"Ontology annotation (" . $stockref->{ontology_count} . ")",
  collapsible=>1,
  collapsed=>1,
  subtitle=>$ontology_subtitle &>
  <& /ontology/associate_ontology.mas,
  trait_db_name => $trait_ontology_db_name,
  object_id     => $stock_id ,
  object_name   => "stock",
  cvterm_add_uri=> $cvterm_add_uri,
  ontology_url  => "/stock/$stock_id/ontologies/",
  reference_uri => "/stock/$stock_id/references/",
  evidence_with_uri => "/stock/$stock_id/evidences/",
  show_form     => $is_owner  &>
</&>

<&| /page/info_section.mas, title=>"Phenotype data " ,  subtitle=>$p_download_link ,  collapsible => 1, collapsed => 1 &>
% foreach my $project (keys %$direct_phenotypes) {
%   my $rs = $direct_phenotypes->{$project} ;

<&| /page/info_section.mas,
    id       => "stock_phenotype",
    title    =>"Experiment: $project",
    subtitle => $add_phenotype_link,
    is_subsection => 1,
    collapsible => 1
&>
    <& /stock/add_phenotype.mas,
      stock_id => $stock_id ,
      trait_ontology_db_name => $trait_ontology_db_name,
      project=>$project
    &>
  <& /phenotypes/phenotype_data.mas ,
      phenotypes=> $rs
    &>
  </&>
% }

% foreach my $key (keys %$members_phenotypes) {
% my $m_rs = $members_phenotypes->{$key};
<&| /page/info_section.mas,
     title         => "Member phenotypes",
     subtitle      => $key,
     is_subsection => 1,
     collapsible   => 1,
 &>
    <& /phenotypes/phenotype_data.mas,
         phenotypes => $m_rs,
         object_id  => $stock_id,
         has_qtl    => $has_qtl_data,
     &>
  </&>
% }
</&>

<&| /page/info_section.mas, title=>"Genotype data ", subtitle=> $g_download_link, collapsible => 1 , collapsed => 1 &>
% print $map_html;
% foreach my $project (keys %$direct_genotypes) {
%  my $genotypes = $direct_genotypes->{$project} ;
<&| /page/info_section.mas, title=>"Experiment: $project", is_subsection => 1, collapsible => 1 &>
% foreach my $genotype (@$genotypes) {
%  print $genotype->description . "\n";
% }       
  </&>
% }

</&>

<& /page/comments.mas, object_type=>'stock', object_id=>$stock_id, referer=>$this_page &>
